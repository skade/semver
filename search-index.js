var searchIndex = {};
searchIndex['semver'] = {"items":[[0,"","semver","Semantic version parsing and comparison."],[1,"Version","","Represents a version number conforming to the semantic versioning scheme."],[11,"major","","The major version, to be incremented on incompatible changes.",0],[11,"minor","","The minor version, to be incremented when functionality is added in a\nbackwards-compatible manner.",0],[11,"patch","","The patch version, to be incremented when backwards-compatible bug\nfixes are made.",0],[11,"pre","","The pre-release version identifier, if one exists.",0],[11,"build","","The build metadata, ignored when determining version precedence.",0],[1,"VersionReq","","A `VersionReq` is a struct containing a list of predicates that can apply to ranges of version\nnumbers. Matching operations can then be done with the `VersionReq` against a particular\nversion to see if it satisfies some or all of the constraints."],[2,"Identifier","","An identifier in the pre-release or build metadata."],[12,"Numeric","","An identifier that's solely numbers.",1],[12,"AlphaNumeric","","An identifier with letters and numbers.",1],[2,"ParseError","","A `ParseError` is returned as the `Err` side of a `Result` when a version is attempted\nto be parsed."],[12,"NonAsciiIdentifier","","All identifiers must be ASCII.",2],[12,"IncorrectParse","","The version was mis-parsed.",2],[12,"GenericFailure","","Any other failure.",2],[2,"ReqParseError","","A `ReqParseError` is returned from methods which parse a string into a `VersionReq`. Each\nenumeration is one of the possible errors that can occur."],[12,"InvalidVersionRequirement","","The given version requirement is invalid.",3],[12,"OpAlreadySet","","You have already provided an operation, such as `=`, `~`, or `^`. Only use one.",3],[12,"InvalidSigil","","The sigil you have written is not correct.",3],[12,"VersionComponentsMustBeNumeric","","All components of a version must be numeric.",3],[12,"OpRequired","","An operation is required. To match an exact version, use `=`.",3],[12,"MajorVersionRequired","","At least a major version is required.",3],[10,"hash","","",1],[10,"cmp","","",1],[10,"partial_cmp","","",1],[10,"lt","","",1],[10,"le","","",1],[10,"gt","","",1],[10,"ge","","",1],[10,"eq","","",1],[10,"ne","","",1],[10,"clone","","",1],[10,"fmt","","",1],[10,"clone","","",0],[10,"partial_cmp","","",2],[10,"lt","","",2],[10,"le","","",2],[10,"gt","","",2],[10,"ge","","",2],[10,"fmt","","",2],[10,"eq","","",2],[10,"ne","","",2],[10,"clone","","",2],[10,"parse","","Parse a string into a semver object.",0],[10,"fmt","","",0],[10,"eq","","",0],[10,"partial_cmp","","",0],[10,"cmp","","",0],[10,"hash","","",0],[10,"clone","","",4],[10,"eq","","",4],[10,"ne","","",4],[10,"fmt","","",3],[10,"description","","",3],[10,"any","","`any()` is a factory method which creates a `VersionReq` with no constraints. In other\nwords, any version will match against it.",4],[10,"parse","","`parse()` is the main constructor of a `VersionReq`. It turns a string like `\"^1.2.3\"`\nand turns it into a `VersionReq` that matches that particular constraint.",4],[10,"exact","","`exact()` is a factory method which creates a `VersionReq` with one exact constraint.",4],[10,"matches","","`matches()` matches a given `Version` against this `VersionReq`.",4],[10,"fmt","","",4]],"paths":[[1,"Version"],[2,"Identifier"],[2,"ParseError"],[2,"ReqParseError"],[1,"VersionReq"]]};
initSearch(searchIndex);
